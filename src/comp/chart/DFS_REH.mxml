<?xml version="1.0" encoding="utf-8"?>
<mx:ColumnChart xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="150" 
	columnWidthRatio="0.60"
	gutterLeft="30" gutterRight="30"
	creationComplete="addAnnotationElements()">
	
	<mx:Script>
		<![CDATA[
			import mx.charts.chartClasses.CartesianCanvasValue;
			import mx.charts.chartClasses.CartesianDataCanvas;
			import mx.controls.Label;
			import mx.formatters.NumberFormatter;
			
			import asset.DFS.timeSeries.meteogram.style.ChartStyleAssets;
			
			
			
			
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_00UTC_odd.png')] private var bg_00UTC_odd:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_00UTC_even.png')] private var bg_00UTC_even:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_12UTC_odd.png')] private var bg_12UTC_odd:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_12UTC_even.png')] private var bg_12UTC_even:Class;
			
			
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_00UTC_odd.png')] private var bg_00UTC_odd_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_00UTC_even.png')] private var bg_00UTC_even_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_12UTC_odd.png')] private var bg_12UTC_odd_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_12UTC_even.png')] private var bg_12UTC_even_KWRF:Class;
			
			
			private function getProperBG(is00UTC:Boolean, isOdd:Boolean, isKWARF:Boolean=false):Object{
				if(isOdd){
					if(is00UTC){
						if(isKWARF){
							return new bg_00UTC_odd_KWRF();						
						}else{
							return new bg_00UTC_odd();						
						}
					}else{
						if(isKWARF){
							return new bg_12UTC_odd_KWRF();						
						}else{
							return new bg_12UTC_odd();						
						}	
					}
				}else{
					if(is00UTC){
						if(isKWARF){
							return new bg_00UTC_even_KWRF();						
						}else{
							return new bg_00UTC_even();						
						}	
					}else{
						if(isKWARF){
							return new bg_12UTC_even_KWRF();						
						}else{
							return new bg_12UTC_even();						
						}
					}
				}	
			}
			
			public function setAlternateFill(is00UTC:Boolean, isOdd:Boolean, isKWARF:Boolean=false):void{
				var bgImg:Object = getProperBG(is00UTC, isOdd, isKWARF);
				bgImg.alpha = 1.0
				var gridLine:GridLines = new GridLines();
				gridLine.setStyle("direction","both");
				gridLine.setStyle("verticalTickAligned",false);
      			gridLine.setStyle("verticalStroke",ChartStyleAssets.glStroke_v);
      			gridLine.setStyle("horizontalStroke",ChartStyleAssets.glStroke_v);
				this.backgroundElements=[bgImg,gridLine];
			}
			
			
			
			
			private function addAnnotationElements():void{
//				var canvas:CartesianDataCanvas = new CartesianDataCanvas();
//				chart.annotationElements.push(canvas);
				if(this.dataProvider != null){
					for each(var item:XML in this.dataProvider){
						if(item.hasOwnProperty("@val")){
							addLabelsToColumn(item["@lst"], item["@val"]);
						}
					}
				}
			}
		
		
			private function addLabelsToColumn(lst:String, val:Number):void{
					var lbl:Label = new Label();
					var currFormat:NumberFormatter = new NumberFormatter();
					currFormat.precision = 0;
					currFormat.rounding = "nearest";
					lbl.text =currFormat.format(val) + "";
					
//					lbl.text =val + "";
					lbl.setActualSize(lbl.getExplicitOrMeasuredWidth(),lbl.getExplicitOrMeasuredHeight());	
					lbl.width = 30; lbl.height = 20;
					lbl.truncateToFit = true;
					lbl.setStyle("fontSize","12");
//					lbl.setStyle("color",0x555555);
//					lbl.setStyle("fontWeight","bold");
					lbl.setStyle("textAlign","center");
					canvas.addDataChild(lbl, new CartesianCanvasValue(lst,-(lbl.width / 2)), new CartesianCanvasValue(val+16,0));
			}
			
			
			private function defineVerticalLabel(cat:Object, pcat:Object,ax:LinearAxis):String {
				var str:String =(cat=="125") ?  "%" : cat+"";
				return str;
  			}
  			
  			
  			
  			private function horLabelFunc(cat:Object, pcat:Object, ax:CategoryAxis, labelItem:Object):String {
				// Return the customized categoryField value:
				var lbl_LST:String = cat.toString();
				if(cat.toString().length == 4){
					if(Number(cat.toString().substring(2,4))%6 !=0){
						lbl_LST= '';
					}
				} 
				return lbl_LST;
			}
  			
		]]>
	</mx:Script>
		
	<mx:Style>
     .bgFill {
        horizontalShowOrigin:true;
        horizontalChangeCount:1; 
        verticalShowOrigin:false;
        verticalChangeCount:1;
        horizontalFill:#FFFFFF;
        horizontalAlternateFill:#EEEEEE;      
     }  
    </mx:Style>
    
		<!-- cartesianDataCanvas -->
		<mx:annotationElements>
			<mx:CartesianDataCanvas id="canvas" includeInRanges="true"/>
		</mx:annotationElements>
		
		<!-- GridLines.verticalTickAligned = false  -->
		<mx:backgroundElements>
            <mx:GridLines styleName=""
            	direction="both"  verticalChangeCount="1"
            	verticalTickAligned="false" 
            	verticalStroke="{ChartStyleAssets.glStroke_v}" 
            	horizontalStroke="{ChartStyleAssets.glStroke_h}" 
            	/>
            	
        </mx:backgroundElements>
        
        <!-- axis renderering -->
		<mx:verticalAxisRenderers>
			<mx:AxisRenderer placement="left" 
				minorTickPlacement="none"  
				tickPlacement="none" 
				axis="{axis_ver}"   
				axisStroke="{ChartStyleAssets.axisStroke}"
				fontSize="11" 
			/> 
			<mx:AxisRenderer placement="right" 
				minorTickPlacement="none"  
				tickPlacement="none" 
				axis="{axis_ver}"  
				axisStroke="{ChartStyleAssets.axisStroke}"
				fontSize="11" 
			/>
		</mx:verticalAxisRenderers>
		<mx:horizontalAxisRenderers>
		<!--color="0x555555"-->
			<mx:AxisRenderer id="topAxisRenderer"
				showLabels="false"
           		placement="top" 
               	canDropLabels="true"
            	tickPlacement="none"    
            	minorTickPlacement="none"   
            	fontSize="17" fontWeight="bold" 
				axisStroke="{ChartStyleAssets.axisStroke}"
	           	axis="{axis_hor}"/>
			<mx:AxisRenderer id="bottomAxisRenderer"
				showLabels="false"
           		placement="bottom" 
                canDropLabels="true"
                tickPlacement="none" 
            	minorTickPlacement="none"  
            	fontSize="17" fontWeight="bold" 
				axisStroke="{ChartStyleAssets.axisStroke}"
           		axis="{axis_hor}"/>
		</mx:horizontalAxisRenderers>
		
		<mx:horizontalAxis>
			<mx:CategoryAxis id="axis_hor" categoryField="@lst"  labelFunction="horLabelFunc"/>
		</mx:horizontalAxis> 
		<mx:verticalAxis>
			<mx:LinearAxis id="axis_ver" 
				minimum="0" 
				maximum="125" 
				interval="25" 
				labelFunction="defineVerticalLabel"/>
		</mx:verticalAxis>
		<!--
		drop the columnSeries shadow..
		<mx:seriesFilters>
			<mx:Array/>
		</mx:seriesFilters>
		-->
		<mx:series >
			<mx:ColumnSeries id="colSeries" 
				xField="@lst" yField="@val" >
				<mx:stroke>
                    <mx:Stroke color="0x777777" weight="1" alpha="0.5" />
                </mx:stroke>
				<!--
				pop pop pop pop pop pop pop pop pop pop pop 
				 <mx:GradientEntry color="0x0088EE"
                                        ratio="0.0"
                                        alpha="0.5" />
                                <mx:GradientEntry color="0x99DDEE" 
                                        ratio="1.0"
                                        alpha="1.0" />
                -->
                 <mx:fill> <!--0x007733-->
                	<mx:LinearGradient angle="90">
                        <mx:entries>
                            <mx:Array>
                                <mx:GradientEntry color="0xC4C4FA"  
                                        ratio="0.0"
                                        alpha="1.0" />
                                <mx:GradientEntry color="0xCCCCFF" 
                                        ratio="1.0"
                                        alpha="0.8" />
                            </mx:Array>
                        </mx:entries>
                	</mx:LinearGradient>
                </mx:fill>
			</mx:ColumnSeries> 
		</mx:series>
	</mx:ColumnChart>
