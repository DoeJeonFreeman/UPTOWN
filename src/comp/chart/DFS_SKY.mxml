<?xml version="1.0" encoding="utf-8"?>
<mx:ColumnChart xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="120" 
	gutterLeft="55" gutterRight="55"
	creationComplete="setCloudAmount();"
	>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Image;
			import mx.messaging.SubscriptionInfo;
			import mx.containers.Grid;
			import asset.DFS.timeSeries.meteogram.itmRenerer.GridlineGDPS;
			import mx.graphics.SolidColor;
			import mx.graphics.Stroke;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import comp.chart.graphic.CloudAmount;
			import mx.charts.chartClasses.CartesianCanvasValue;
			import mx.charts.chartClasses.CartesianDataCanvas;
			import asset.DFS.timeSeries.meteogram.style.ChartStyleAssets;
			import mx.controls.Label;
			
			import mx.charts.GridLines;

			
			
			
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_00UTC_odd.png')] private var bg_00UTC_odd:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_00UTC_even.png')] private var bg_00UTC_even:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_12UTC_odd.png')] private var bg_12UTC_odd:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_12UTC_even.png')] private var bg_12UTC_even:Class;
			
			
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_00UTC_odd.png')] private var bg_00UTC_odd_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_00UTC_even.png')] private var bg_00UTC_even_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_12UTC_odd.png')] private var bg_12UTC_odd_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_12UTC_even.png')] private var bg_12UTC_even_KWRF:Class;
			
			
			private function getProperBG(is00UTC:Boolean, isOdd:Boolean, isKWARF:Boolean=false):Object{
				if(isOdd){
					if(is00UTC){
						if(isKWARF){
							return new bg_00UTC_odd_KWRF();						
						}else{
							return new bg_00UTC_odd();						
						}
					}else{
						if(isKWARF){
							return new bg_12UTC_odd_KWRF();						
						}else{
							return new bg_12UTC_odd();						
						}	
					}
				}else{
					if(is00UTC){
						if(isKWARF){
							return new bg_00UTC_even_KWRF();						
						}else{
							return new bg_00UTC_even();						
						}	
					}else{
						if(isKWARF){
							return new bg_12UTC_even_KWRF();						
						}else{
							return new bg_12UTC_even();						
						}
					}
				}	
			}
			
			public function setAlternateFill(is00UTC:Boolean, isOdd:Boolean, isKWARF:Boolean=false):void{
				var bgImg:Object = getProperBG(is00UTC, isOdd, isKWARF);
				bgImg.alpha = 1.0
				var gridLine:GridLines = new GridLines();
				gridLine.setStyle("direction","both");
				gridLine.setStyle("verticalTickAligned",false);
      			gridLine.setStyle("verticalStroke",ChartStyleAssets.glStroke_v);
      			gridLine.setStyle("horizontalStroke",ChartStyleAssets.glStroke_v);
				this.backgroundElements=[bgImg,gridLine];
			}
			
			
			
			//ECMWF
			[Embed (source = "/asset/rasterGraphic/gridLines/UTC00_bg_odd/utc00_odd_120.png")] 
			public var UTC00_bg:Class; //ecmwwf 00utc ODD (dashedLine n shade)
			//ECMWF
			[Embed (source = "/asset/rasterGraphic/gridLines/UTC00_bg_even/utc00_even_120.png")] 
			public var UTC00_bg_even:Class; //ecmwf 00utc EVEN(dashedLine n shade)
			//ECMWF
			[Embed (source = "/asset/rasterGraphic/gridLines/UTC12_bg/utc12_120.png")] 
			public var UTC12_bg_ecmwf:Class; //ecmwf 12UTC dashedLine only

			//GDAPS			
			[Embed (source = "/asset/rasterGraphic/gridLines/UTC12_bg_279hrs/utc12_279hrs_120.png")] 
			public var UTC12_bg_dashed:Class;
			//GDAPS			
			[Embed (source = "/asset/rasterGraphic/gridLines/UTC00_bg_279hrs_odd/utc00_279hrs_odd_120.png")] 
			public var UTC00_bg_279hrs:Class;
			//GDAPS			
			[Embed (source = "/asset/rasterGraphic/gridLines/UTC00_bg_279hrs_even/utc00_279hrs_even_120.png")] 
			public var UTC00_bg_279hrs_even:Class;	
			
			
			
			//기존 그래픽에서 이미지로 대체 Jan 2014
			[Embed(source='asset/DFS/timeSeries/meteogram/symbol/cloudCover/cc1.png')] private var clearSkies:Class;
     		[Embed(source='asset/DFS/timeSeries/meteogram/symbol/cloudCover/cc2.png')] private var scatteredClouds:Class;
     		[Embed(source='asset/DFS/timeSeries/meteogram/symbol/cloudCover/cc3.png')] private var brokenClouds:Class;
     		[Embed(source='asset/DFS/timeSeries/meteogram/symbol/cloudCover/cc4.png')] private var overcast:Class;
//			[Embed(source='asset/DFS/timeSeries/meteogram/symbol/cloudCover/cloudCover1.png')] private var clearSkies:Class;
//     		[Embed(source='asset/DFS/timeSeries/meteogram/symbol/cloudCover/cloudCover2.png')] private var scatteredClouds:Class;
//     		[Embed(source='asset/DFS/timeSeries/meteogram/symbol/cloudCover/cloudCover3.png')] private var brokenClouds:Class;
//     		[Embed(source='asset/DFS/timeSeries/meteogram/symbol/cloudCover/cloudCover4.png')] private var overcast:Class;
			
			
			
			private function setCloudAmount():void{
				
				moveAxisRenderer(parentApplication.isMEDM);
				
			   	if(this.dataProvider != null){
					for each(var item:XML in this.dataProvider){
						var n:Number = item.@val;
						var s:String = item.@lst;
						//cloudAmountSymbol object..
//						var ca:CloudAmount = new CloudAmount(n.toString());
//						var uic:UIComponent = new UIComponent();
//						uic.addChild(ca);
//						canvas.addDataChild(uic, s, new CartesianCanvasValue(n,0))
//						canvas.graphics.drawCircle(2,2,2);
						
						var ca:Image = new Image();
						ca.width = 30;
                  		ca.height = 30;
						switch(n){
							case 1 : ca.source = clearSkies; break;
							case 2 : ca.source = scatteredClouds; break;
							case 3 : ca.source = brokenClouds; break;
							case 4 : ca.source = overcast; break;
						}
						canvas.addDataChild(ca,  new CartesianCanvasValue(s,-(ca.width / 2)), new CartesianCanvasValue(n+0.6,0))
						
						
						
					}
				}
        	}
			
			
			
			
	  		public function set00UTC_gridLines(isOddNum:Boolean,is279hrs:Boolean=false):void{
				if(isOddNum){
					var bgImg:Object = (is279hrs)? new UTC00_bg_279hrs_even() : new UTC00_bg_even() ;
				}else{
					var bgImg:Object = (is279hrs)? new UTC00_bg_279hrs() : new UTC00_bg() ;
				}
				
				bgImg.alpha = .9;	
				gridLine.setStyle("direction","horizontal");
				gridLine.setStyle("verticalTickAligned",true);
      			gridLine.setStyle("horizontalStroke",ChartStyleAssets.glStroke_h2);
				this.backgroundElements=[bgImg,gridLine];
			}
  			
  			public function set12UTC_gridLines(isOddNum:Boolean = false, is279hrs:Boolean=false):void{
  				
      			gridLine.setStyle("horizontalStroke",ChartStyleAssets.glStroke_h);
      			
  				var sc_white:SolidColor = new SolidColor(0xFFFFFF,0.6);
				var sc_gray:SolidColor = new SolidColor(0xe4e4e4,0.6);
				gridLine.setStyle("direction","both");
				gridLine.setStyle("verticalFill",(isOddNum)? sc_white:sc_gray);
				gridLine.setStyle("verticalAlternateFill",(isOddNum)? sc_gray:sc_white);
				gridLine.setStyle("verticalChangeCount",2);
				gridLine.setStyle("verticalTickAligned",true);
				gridLine.setStyle("verticalStroke",ChartStyleAssets.glStroke_v2); 
  				
  				var bgImg:Object = (is279hrs)? new UTC12_bg_dashed() : new UTC12_bg_ecmwf();
				this.backgroundElements=[gridLine,bgImg];
			}
			

			
			
			
			
			
			public function defineLabel(cat:Object, pcat:Object, ax:CategoryAxis, labelItem:Object):String {
//				if(cat.toString().length > 4){
////					var itm:XML = this.dataProvider[this.dataProvider.length-1]; //00UTC일 경우 젤 마지막 레이블 튀어나와서 걍 짤랐심ㅠ 꼼수여
////					if(itm.@lst==cat){
////						return null;
////					}else{
//						return cat.toString().substring(0,2)+"/"+cat.toString().substring(2,4);
////					}
//			    }else{
//			    	if(Number(cat.toString().substring(2,4))%6 !=0){
//						return '';
//					}
//			    }
			    // Return the customized categoryField value:
//			    return cat+"";
				var itm:XML = this.dataProvider[this.dataProvider.length-1];
				if(cat.toString().length > 4){
					if(itm.@lst==cat){
//						Alert.show(cat.toString());
						return null;
					}else{
						return cat.toString().substring(0,2)+"."+cat.toString().substring(2,4);
					}
			    }else{
			    	if(Number(cat.toString().substring(2,4))%6 !=0){
						return '';
					}
			    }
			    // Return the customized categoryField value:
			    return cat+"";
			}
			
			
			public function defineLabel_00UTC(cat:Object, pcat:Object, ax:CategoryAxis, labelItem:Object):String {
					var itm:XML = this.dataProvider[this.dataProvider.length-1]; //00UTC일 경우 젤 마지막 레이블 튀어나와서 걍 짤랐심ㅠ 꼼수여
					if(itm.@lst==cat){
						return null;
					}else if(cat.toString().substring(4)=="00"){
						return null;
					}else{
						return cat.toString().substring(0,2)+"."+cat.toString().substring(2,4);
					}
			}
					
			private function defineVerticalLabel(cat:Object, pcat:Object,ax:LinearAxis):String {
	  				var str:String;
       				if(cat == "1.0"){
       					str = "맑음";
       				}else if(cat == "2.0"){
       					str = "구름조금";
      		 		}else if(cat == "3.0"){
 		      			str = "구름많음";
 		      		}else if(cat == "4.0"){
    		   			str = "흐림";
  		     		}
//       				if(cat == "1.0"){
//       					str = "ECMWF";
//       				}else if(cat == "2.0"){
//       					str = "KWRF";
//      		 		}else if(cat == "3.0"){
// 		      			str = "RDPS";
// 		      		}else if(cat == "4.0"){
//    		   			str = "PMOS";
//  		     		}
	 	 		return str;
  			}
  			
  			
  			public function moveAxisRenderer(isMEDM:Boolean):void{
				if(isMEDM){
					moveAxisLabel();
					trace('DFS_SKY isMEDM moveAxisLabel:: '+isMEDM.toString())
				}else{
					trace('DFS_SKY isMEDM moveAxisLabel:: '+isMEDM.toString())
				}
			} 
			
			
  			public function moveAxisLabel():void{
				trace('calllater:: moveAxisLabel')
				topAxisRenderer.move(topAxisRenderer.x-7,topAxisRenderer.y);
				topAxisRenderer.setStyle("labelAlign","right");
				bottomAxisRenderer.move(bottomAxisRenderer.x-7,bottomAxisRenderer.y);
				bottomAxisRenderer.setStyle("labelAlign","right");
			}
		]]>
	</mx:Script>
		
		<!-- cartesianDataCanvas -->
		<mx:annotationElements>
			<mx:CartesianDataCanvas id="canvas" includeInRanges="true" />
		</mx:annotationElements>
		
		
		<!--
		<mx:Array id="bgArr">
			<mx:Image id="utc12" source="/asset/DFS/timeSeries/meteogram/style/12UTC_SKY.gif" width="100%" height="100%" /> 
		</mx:Array>
        -->    	
		
		<!-- GridLines.verticalTickAligned = false  
        -->
         <mx:backgroundElements>
            <mx:GridLines  id="gridLine" 
            	/>
        </mx:backgroundElements>
        
        <!-- axis renderering -->
		<mx:verticalAxisRenderers>
			<mx:AxisRenderer
				placement="left" 
				minorTickPlacement="none"  
				tickPlacement="none" 
				axis="{axis_ver}"   
				axisStroke="{ChartStyleAssets.axisStroke}" 
				fontSize="12" 
			/> 
			<mx:AxisRenderer 
				placement="right" 
				minorTickPlacement="none"  
				tickPlacement="none" 
				axis="{axis_ver}"  
				axisStroke="{ChartStyleAssets.axisStroke}"
				fontSize="12" 
			/>
		</mx:verticalAxisRenderers>
		<mx:horizontalAxisRenderers>
		<!--color="0x555555"
			<mx:AxisRenderer id="topAxisRenderer"
				showLabels="false"
           		placement="top" 
               	canDropLabels="true"
            	tickPlacement="none"    
            	minorTickPlacement="none"   
            	fontSize="17" fontWeight="bold"  
				axisStroke="{ChartStyleAssets.axisStroke}"
	           	axis="{axis_hor}"/>
			<mx:AxisRenderer id="bottomAxisRenderer"
				showLabels="false"
           		placement="bottom" 
                canDropLabels="true"
                tickPlacement="none" 
            	minorTickPlacement="none"  
            	fontSize="17" fontWeight="bold" 
				axisStroke="{ChartStyleAssets.axisStroke}"
           		axis="{axis_hor}"/>
		-->
           	<mx:AxisRenderer id="topAxisRenderer" 
				showLabels="false" 
           		placement="top" 
               	canDropLabels="true"
            	tickPlacement="none" 
            	minorTickPlacement="none"   
            	fontSize="17"  fontWeight="bold"
				axisStroke="{ChartStyleAssets.invisibleAxis}"  
	           	axis="{axis_hor}" 
	           	/>
			<mx:AxisRenderer id="topAxisRenderer2"
				showLabels="false" 
           		placement="top" 
            	tickPlacement="none" 
            	minorTickPlacement="none"   
				axisStroke="{ChartStyleAssets.axisStroke}" labelGap="-10"  
	           	axis="{axis_hor}"
	           	/>
			<mx:AxisRenderer id="bottomAxisRenderer"
				showLabels="false"
           		placement="bottom" 
                canDropLabels="true"
                tickPlacement="none" 
            	minorTickPlacement="none"  
            	fontSize="17" fontWeight="bold" 
				axisStroke="{ChartStyleAssets.invisibleAxis}"
           		axis="{axis_hor}"
           		/>
			<mx:AxisRenderer id="bottomAxisRenderer2"
				showLabels="false"
           		placement="bottom"  
                canDropLabels="true"
                tickPlacement="none" 
            	minorTickPlacement="none"  
            	fontSize="17" fontWeight="bold" 
				axisStroke="{ChartStyleAssets.axisStroke}" labelGap="-10"
           		axis="{axis_hor}"
           		/>	
		</mx:horizontalAxisRenderers>
		
		<mx:horizontalAxis>
			<mx:CategoryAxis id="axis_hor" categoryField="@lst"  labelFunction="defineLabel"/>
		</mx:horizontalAxis> 
		<mx:verticalAxis>
			<mx:LinearAxis id="axis_ver" 
				interval="1" minimum="0.1"  maximum="4.9"
				labelFunction="defineVerticalLabel"/>
		</mx:verticalAxis>
		
		<mx:series>
			<mx:ColumnSeries id="colSeries" 
				xField="@lst" yField="@val" visible="false" />
		</mx:series>
		
</mx:ColumnChart>
