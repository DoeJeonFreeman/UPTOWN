<?xml version="1.0" encoding="utf-8"?>
<mx:ColumnChart xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="150" 
	columnWidthRatio="0.70"
	gutterLeft="30" gutterRight="30"
	showDataTips="true" dataTipFunction="dataTipFunc"  dataTipMode="multiple" 
	>
<!--	
	creationComplete="addAnnotationElements()"
-->	
	<mx:Script>
		<![CDATA[
			import mx.graphics.Stroke;
			import comp.util.common.CommonUtil;
			import mx.charts.chartClasses.Series;
			import mx.charts.HitData;
			import mx.graphics.SolidColor;
			import mx.charts.chartClasses.CartesianCanvasValue;
			import mx.charts.chartClasses.CartesianDataCanvas;
			import asset.DFS.timeSeries.meteogram.style.ChartStyleAssets;
			import mx.controls.Label;
			
			
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_00UTC_odd.png')] private var bg_00UTC_odd:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_00UTC_even.png')] private var bg_00UTC_even:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_12UTC_odd.png')] private var bg_12UTC_odd:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/t3h/SHRT_12UTC_even.png')] private var bg_12UTC_even:Class;
			
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_00UTC_odd.png')] private var bg_00UTC_odd_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_00UTC_even.png')] private var bg_00UTC_even_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_12UTC_odd.png')] private var bg_12UTC_odd_KWRF:Class;
			[Embed(source='asset/DFS/timeSeries/meteogram/gridLines/KWARF/t3h/SHRT_12UTC_even.png')] private var bg_12UTC_even_KWRF:Class;
			
			
			private function getProperBG(is00UTC:Boolean, isOdd:Boolean, isKWARF:Boolean=false):Object{
				if(isOdd){
					if(is00UTC){
						if(isKWARF){
							return new bg_00UTC_odd_KWRF();						
						}else{
							return new bg_00UTC_odd();						
						}
					}else{
						if(isKWARF){
							return new bg_12UTC_odd_KWRF();						
						}else{
							return new bg_12UTC_odd();						
						}	
					}
				}else{
					if(is00UTC){
						if(isKWARF){
							return new bg_00UTC_even_KWRF();						
						}else{
							return new bg_00UTC_even();						
						}	
					}else{
						if(isKWARF){
							return new bg_12UTC_even_KWRF();						
						}else{
							return new bg_12UTC_even();						
						}
					}
				}	
			}
			
			
			public function setAlternateFill(is00UTC:Boolean, isOdd:Boolean, isKWARF:Boolean=false):void{
				var bgImg:Object = getProperBG(is00UTC, isOdd, isKWARF);
				bgImg.alpha = 1.0
				var gridLine:GridLines = new GridLines();
				gridLine.setStyle("direction","both");
				gridLine.setStyle("verticalTickAligned",false);
      			gridLine.setStyle("verticalStroke",ChartStyleAssets.glStroke_v);
      			gridLine.setStyle("horizontalStroke",ChartStyleAssets.glStroke_v);
				this.backgroundElements=[bgImg,gridLine];
			}
			
			
			
			private function dataTipFunc(e:HitData):String {
		        var s:String;
		        var dateTime:String = Object(e.item).@lst;
		        s  = "<B>" + Object(e.element).displayName+'</B>\n'; 
		        s +=  dateTime.substr(0,2) + '일 ' + dateTime.substr(2,4) + '시\n'; 
		        s += "------------\n";
//		        s += Number(Object(e.item).@val).toFixed(0) + ' %'; //2016-03-21 툴팁은 소숫점 1번째 자리까지 표출되네 기존에도
		        s += Object(e.item).@val + ' %';
		        return s;
		    }   
			
			
			public function setDefaultStroke(val:Number=0.9):void{
				for each(var cs:ColumnSeries in this.series){
					var colour:int = CommonUtil.getInstance().getStrokeColourByModelName(cs.id,true,false);
					cs.setStyle("fill", new SolidColor(colour,val));
					cs.setStyle("alpha",val);
					cs.setStyle("stroke", new Stroke(0x000000, 0, 0))
//					cs.selectedIndices = [];
				}
			}
			
			
			public function addAnnotationElements(currSeries:Series,isVisible:Boolean):void{
				trace('DFS_REH_MergedModel.addAnnotationElement()')
				canvas.removeAllChildren();
				if(!isVisible){
					setDefaultStroke();
					return;
				}
				if(! CommonUtil.getInstance().isFileExist(parentApplication.mDictionary,currSeries.displayName)){
					setDefaultStroke();
					return;
				}
				if(currSeries.dataProvider != null){
					setDefaultStroke(0.3);
					var colour:int = CommonUtil.getInstance().getStrokeColourByModelName(currSeries.id,true,true);
					currSeries.setStyle("fill", new SolidColor(colour,1));
					currSeries.setStyle("alpha", 1);
					currSeries.setStyle("stroke", new Stroke(0x000000,1,1));
					for each(var item:XML in currSeries.dataProvider){
						if(item.hasOwnProperty("@val")){
							addLabelsToColumn(item["@lst"], item["@val"]);
						}
					}
				}
			}
		
		
			private function addLabelsToColumn(lst:String, val:Number):void{
				var lbl:Label = new Label();
				lbl.text =val.toFixed(0) + "";
				lbl.setActualSize(lbl.getExplicitOrMeasuredWidth(),lbl.getExplicitOrMeasuredHeight());	
				lbl.width = 30; lbl.height = 20;
				lbl.truncateToFit = true;
				lbl.setStyle("fontSize","12");
				lbl.setStyle("textAlign","center");
				canvas.addDataChild(lbl, new CartesianCanvasValue(lst,-(lbl.width / 2)), new CartesianCanvasValue(val+16,0));
			}
			
			
			private function defineVerticalLabel(cat:Object, pcat:Object,ax:LinearAxis):String {
				var str:String =(cat=="125") ?  "%" : cat+"";
				return str;
  			}
  			
  			
  			/**
  			 * Return the customized categoryField value
  			 * */
  			private function horLabelFunc(cat:Object, pcat:Object, ax:CategoryAxis, labelItem:Object):String {
				var lbl_LST:String = cat.toString();
				if(cat.toString().length == 4){
					if(Number(cat.toString().substring(2,4))%6 !=0){
						lbl_LST= '';
					}
				} 
				return lbl_LST;
			}
  			
		]]>
	</mx:Script>
		
	<mx:Style>
     .bgFill {
        horizontalShowOrigin:true;
        horizontalChangeCount:1; 
        verticalShowOrigin:false;
        verticalChangeCount:1;
        horizontalFill:#FFFFFF;
        horizontalAlternateFill:#EEEEEE;      
     }  
    </mx:Style>
    
		<!-- cartesianDataCanvas -->
		<mx:annotationElements>
			<mx:CartesianDataCanvas id="canvas" includeInRanges="true"/>
		</mx:annotationElements>
		
		<!-- GridLines.verticalTickAligned = false  -->
		<mx:backgroundElements>
            <mx:GridLines styleName=""
            	direction="both"  verticalChangeCount="1"
            	verticalTickAligned="false" 
            	verticalStroke="{ChartStyleAssets.glStroke_v}" 
            	horizontalStroke="{ChartStyleAssets.glStroke_h}" 
            	/>
            	
        </mx:backgroundElements>
        
        <!-- axis renderering -->
		<mx:verticalAxisRenderers>
			<mx:AxisRenderer placement="left" 
				minorTickPlacement="none"  
				tickPlacement="none" 
				axis="{axis_ver}"   
				axisStroke="{ChartStyleAssets.axisStroke}"
				fontSize="11" 
			/> 
			<mx:AxisRenderer placement="right" 
				minorTickPlacement="none"  
				tickPlacement="none" 
				axis="{axis_ver}"  
				axisStroke="{ChartStyleAssets.axisStroke}"
				fontSize="11" 
			/>
		</mx:verticalAxisRenderers>
		<mx:horizontalAxisRenderers>
		<!--color="0x555555"-->
			<mx:AxisRenderer id="topAxisRenderer"
				showLabels="false"
           		placement="top" 
               	canDropLabels="true"
            	tickPlacement="none"    
            	minorTickPlacement="none"   
            	fontSize="17" fontWeight="bold" 
				axisStroke="{ChartStyleAssets.axisStroke}"
	           	axis="{axis_hor}"/>
			<mx:AxisRenderer id="bottomAxisRenderer"
				showLabels="false"
           		placement="bottom" 
                canDropLabels="true"
                tickPlacement="none" 
            	minorTickPlacement="none"  
            	fontSize="17" fontWeight="bold" 
				axisStroke="{ChartStyleAssets.axisStroke}"
           		axis="{axis_hor}"/>
		</mx:horizontalAxisRenderers>
		
		<mx:horizontalAxis>
			<mx:CategoryAxis id="axis_hor" categoryField="@lst"  labelFunction="horLabelFunc"/>
		</mx:horizontalAxis> 
		<mx:verticalAxis>
			<mx:LinearAxis id="axis_ver" 
				minimum="0" 
				maximum="125" 
				interval="25" 
				labelFunction="defineVerticalLabel"/>
		</mx:verticalAxis>
		<!--
		drop the columnSeries shadow..
		-->
		<mx:seriesFilters>
			<mx:Array/>
		</mx:seriesFilters>
		
		<mx:series >
		
			<mx:ColumnSeries id="series_best" columnWidthRatio="1"
				itemRenderer="asset.DFS.timeSeries.meteogram.itmRenerer.ColumnRenderer4MergedModel"
				xField="@lst" yField="@val"  displayName="BEST" fill="{ChartStyleAssets.SC_SHRT_KWRF}">
			</mx:ColumnSeries>	  
			
			<mx:ColumnSeries id="series_pmos" columnWidthRatio="1"
				itemRenderer="asset.DFS.timeSeries.meteogram.itmRenerer.ColumnRenderer4MergedModel"
				xField="@lst" yField="@val"  displayName="RDPS MOS" fill="{ChartStyleAssets.SC_SHRT_PMOS}">
			</mx:ColumnSeries>	  
			
			
			<mx:ColumnSeries id="series_rdps" columnWidthRatio="1" fill="{ChartStyleAssets.SC_SHRT_RDPS}"
				itemRenderer="asset.DFS.timeSeries.meteogram.itmRenerer.ColumnRenderer4MergedModel"
				xField="@lst" yField="@val"  displayName="RDPS">
			</mx:ColumnSeries>	  
				
			<!--
			<mx:ColumnSeries id="series_kwrf" columnWidthRatio="1" fill="{ChartStyleAssets.SC_SHRT_KWRF}" 
				itemRenderer="asset.DFS.timeSeries.meteogram.itmRenerer.ColumnRenderer4MergedModel"
				xField="@lst" yField="@val" displayName="KWRF">
			</mx:ColumnSeries>	 
			-->	
			<mx:ColumnSeries id="series_ecmw"  columnWidthRatio="1" fill="{ChartStyleAssets.SC_SHRT_ECMW}"
				itemRenderer="asset.DFS.timeSeries.meteogram.itmRenerer.ColumnRenderer4MergedModel"
				xField="@lst" yField="@val" displayName="ECMWF" >
                <!--
				<mx:stroke>
                    <mx:Stroke color="0x000000" weight="1" alpha="0.3" />
                </mx:stroke>
                 <mx:fill> 
                	<mx:LinearGradient angle="90">
                        <mx:entries>
                            <mx:Array>
                                <mx:GradientEntry color="0xe48701"  
                                        ratio="0.0"
                                        alpha="1.0" />
                                <mx:GradientEntry color="0xe48701" 
                                        ratio="1.0"
                                        alpha="0.8" />
                            </mx:Array>
                        </mx:entries>
                	</mx:LinearGradient>
                </mx:fill>
                -->
			</mx:ColumnSeries> 
			
				
					 
					
				



		</mx:series>
	</mx:ColumnChart>
