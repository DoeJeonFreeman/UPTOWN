/** * use DottedLine.as class file for the following path http://www.warmforestflash.com/blog/2009/01/as3-dotted-line-class/ * and use this function to main.mxml file *  * private function drawline(argStr:String):void {  * 		var s:Shape= new DottedLine(1.5,Chart.height,0xff0000,1,5,4);  * 		uil=new UIComponent();  * 		uil.addChild(s);  * 		uil.height= Chart.height;  * 		canChart.addDataChild(uil,argStr,null,null,null,argStr,50); }  *  * */package me{	import flash.display.Shape;	import flash.display.BitmapData;	import flash.geom.Rectangle;	public class DottedLine extends Shape	{		private var _w:Number;		private var _h:Number;		private var _color:uint;		private var _dotAlpha:Number;		private var _dotWidth:Number;		private var _spacing:Number;				//============================================================================================================================		public function DottedLine(w:Number = 100, h:Number = 1, color:uint = 0x777777, dotAlpha = 1, dotWidth:Number = 1, spacing:Number = 1)		//============================================================================================================================		{			_w = w;			_h = h;			_color = color;			this.alpha = dotAlpha;			_dotWidth = dotWidth;			_spacing = spacing;			drawDottedLine();		}				//============================================================================================================================		private function drawDottedLine():void		//============================================================================================================================		{			graphics.clear();			var tile:BitmapData = new BitmapData(_dotWidth + _spacing, _h + 1, true);			var r1:Rectangle = new Rectangle(0, 0, _dotWidth, _h);			var argb:uint = returnARGB(_color, 255);			tile.fillRect(r1, argb);			var r2:Rectangle = new Rectangle(_dotWidth, 0, _dotWidth + _spacing, _h);			tile.fillRect(r2, 0x00000000);			graphics.beginBitmapFill(tile, null, true);			graphics.drawRect(0, 0, _w, _h);			graphics.endFill();		}				//============================================================================================================================		private function returnARGB(rgb:uint, newAlpha:uint):uint		//============================================================================================================================		{			var argb:uint = 0;			argb += (newAlpha<<24);			argb += (rgb);			return argb;		}			}}